import { HelloCreateDto } from "domains/Hello/HelloDtos";
import HelloEntity from "domains/Hello/HelloEntity";
import HelloService from "domains/Hello/HelloService";
import Head from "next/head";
import React from "react";
import { container } from "tsyringe";
import { proxy, useSnapshot } from "valtio";

const state = proxy({
    data: new Array<HelloEntity>(),
});

const input = proxy<HelloCreateDto>({
    name: "",
} as HelloCreateDto);

export default function Home() {
    const hello = container.resolve<HelloService>(HelloService);
    const data = useSnapshot<Array<HelloEntity>>(state.data);
    const inputData = useSnapshot<HelloCreateDto>(input);

    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
        input.name = e.target.value;
    };

    const handleSubmit = (e: React.FormEvent<HTMLFormElement>): boolean => {
        e.preventDefault();

        hello.createData({
            name: inputData.name,
        } as HelloCreateDto);

        state.data = hello.getList();

        input.name = "";

        return false;
    };
    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main>
                <h1>Sample App</h1>

                <form onSubmit={handleSubmit}>
                    <input
                        type="text"
                        value={inputData.name}
                        onChange={handleInputChange}
                        autoFocus
                    />
                    <button type="submit">Append</button>
                </form>

                <ul>
                    {data.map((value: HelloEntity, index: number) => (
                        <li key={index}>
                            <p>{value.name}</p>
                            <span>{value.modifiedFormat()}</span>
                        </li>
                    ))}
                </ul>
            </main>
        </>
    );
}
